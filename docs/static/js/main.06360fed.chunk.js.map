{"version":3,"sources":["store/reducers/countries.js","store/consts.js","store/reducers/form-data.js","store/reducers/index.js","store/index.js","styles/theme/colors.js","styles/global.js","styles/theme/commons.js","styles/theme/theme.js","components/App/App.shards.js","components/Form/Form.shards.js","components/Form/validation.js","components/TextField/TextField.shards.js","components/Label/Label.shards.js","components/Label/Label.js","components/TextField/TextField.js","components/SelectField/SelectField.shards.js","components/SelectField/SelectField.js","components/Form/Form.js","utils/localStorage.js","store/actions/index.js","components/Form/FormContainer.js","components/App/App.js","serviceWorker.js","index.js"],"names":["initialState","countries","countriesReducer","state","action","type","Object","assign","concat","payload","formDataReducer","rootReducer","combineReducers","form","formReducer","countriesField","formData","storeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","background","primary","text","secondary","placeholder","error","border","input","success","button","active","hover","base","css","normalize","borders","borderRadius","main","colors","commons","Root","styled","theme","FormRoot","Button","InputRoot","div","InputWrapper","ErrorMsg","span","phoneNumber","value","errorTxt","undefined","charAt","length","isNaN","Number","required","email","test","ssnFormat","match","ssnChecksum","reduceTo10","slice","indexOfDash","indexOf","numbersArr","split","splice","pop","numberTime1","numberTime2","i","result","resultArr","push","sumTime1","reduce","acc","curr","sumTime2","lastDigitOfSum","checksum","Input","LabelRoot","label","smaller","Asterisk","Label","TextField","meta","touched","invalid","valid","showError","customStyles","control","provided","selectProps","customBorderColor","keepColor","boxShadow","borderColor","isFocused","isSelected","cursor","color","option","SelectField","options","onBlur","styles","ContactForm","reduxForm","enableReinitialize","props","submitting","handleSubmit","onSubmit","Field","name","component","validate","disabled","saveFormToLS","values","localStorage","setItem","JSON","stringify","getDataFromLS","storageName","retrivedData","getItem","parse","getCountries","dispatch","countriesDataFromLS","fetch","then","response","json","data","countriesOption","ConnectedForm","connect","initialValues","getFormData","deleteFormData","removeItem","useEffect","console","log","onChange","App","globalStyles","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.06360fed.chunk.js","sourcesContent":["import { GET_COUNTRIES } from '../consts'\n\nconst initialState = {\n  countries: []\n}\n\nconst countriesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_COUNTRIES:\n      return Object.assign({}, state, {\n        countries: state.countries.concat(action.payload)\n      })\n\n    default:\n      return state\n  }\n}\n\nexport default countriesReducer\n","export const GET_COUNTRIES = 'GET_COUNTRIES'\nexport const GET_FORM_DATA = 'GET_FORM_DATA'\nexport const SAVE_FORM_DATA = 'SAVE_FORM_DATA'\nexport const DELETE_FORM_DATA = 'DELETE_FORM_DATA'","import { GET_FORM_DATA, DELETE_FORM_DATA } from '../consts'\n\nconst initialState = {}\n\nconst formDataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_FORM_DATA:\n      return Object.assign({}, state, action.payload)\n\n    case DELETE_FORM_DATA:\n      return {}\n\n    default:\n      return state\n  }\n}\n\nexport default formDataReducer\n","import { combineReducers } from 'redux'\nimport { reducer as formReducer } from 'redux-form'\n\nimport countriesReducer from './countries'\nimport formDataReducer from './form-data'\n\nconst rootReducer = combineReducers({\n  form: formReducer,\n  countriesField: countriesReducer,\n  formData: formDataReducer\n})\n\nexport default rootReducer\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\n\nimport rootReducer from './reducers/index'\n\nconst storeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(\n  rootReducer,\n  storeEnhancers(applyMiddleware(thunk))\n)\n\nexport default store\n","const _white = '#FFF'\nconst _colorGrey61 = '#979c9f'\nconst _colorGrey80 = '#cccccc'\n\nconst _oxfordBlue = '#354052'\nconst _royalBlue = '#443df1'\nconst _governorBay = '#3630c0'\nconst _flamingo = '#f1443d'\nconst _malachite = '#3df144'\n\nexport const background = {\n  primary: _white,\n}\n\nexport const text = {\n  primary: _oxfordBlue,\n  secondary: _white,\n  placeholder: _colorGrey61,\n  error: _flamingo,\n}\n\nexport const border = {\n  input: _colorGrey80,\n  success: _malachite,\n  error: _flamingo,\n}\n\nexport const button = {\n  active: _royalBlue,\n  hover: _governorBay,\n}","import { css } from '@emotion/core'\nimport normalize from 'emotion-normalize'\n\nimport { text } from './theme/colors'\n\nconst base = css`\n  * {\n    border: none;\n    box-sizing: border-box;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  html {\n    font-size: 62.5%; //== 10px (so that 1rem == 10px)\n  }\n\n  body {\n    color: ${text.primary};\n    font-size: 1.6rem;\n    height: 100vh;\n  }\n\n  p, ul, li {\n    margin: 0;\n  }\n\n  input:-webkit-autofill,\n  input:-webkit-autofill:hover,\n  input:-webkit-autofill:focus,\n  input:-internal-autofill-selected,\n  input:-internal-autofill-previewed,\n  textarea:-webkit-autofill,\n  textarea:-webkit-autofill:hover,\n  textarea:-webkit-autofill:focus,\n  select:-webkit-autofill,\n  select:-webkit-autofill:hover,\n  select:-webkit-autofill:focus {\n    -webkit-text-fill-color: ${text.primary};\n    font-size: 1.6rem !important;\n    -webkit-box-shadow: 0 0 0 50px white inset;\n  }\n`\n\nexport default css`\n  ${normalize}\n  ${base}\n`\n","import { border } from './colors'\n\nexport const borders = {\n  input: `1px solid ${border.input}`,\n  success: `1px solid ${border.success}`,\n  error: `1px solid ${border.error}`,\n}\n\nexport const borderRadius = {\n  main: '4px'\n}","import * as colors from './colors'\nimport * as commons from './commons'\n\nexport default {\n  colors,\n  commons\n}\n","import styled from '@emotion/styled'\n\nexport const Root = styled.main`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: ${({ theme }) => theme.colors.background.primary};\n  padding: 20px;\n`\n","import styled from '@emotion/styled'\n\nexport const FormRoot = styled.form`\n  max-width: 500px;\n  width: 100%;\n`\n\nexport const Button = styled.button`\n  margin: 20px auto;\n  padding: 15px 20px;\n  cursor: pointer;\n  font-weight: 700;\n  color: ${({ theme }) => theme.colors.text.secondary};\n  background-color: ${({ theme }) => theme.colors.button.active};\n  border-radius: ${({ theme }) => theme.commons.borderRadius.main};\n\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.button.hover};\n  }\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.colors.button.hover};\n    cursor: default;\n  }\n`\nexport const InputRoot = styled.div`\n  margin: 20px 0;\n`\n\nexport const InputWrapper = styled.div`\n  position: relative;\n  margin-top: 10px;\n`\n\nexport const ErrorMsg = styled.span`\n  position: absolute;\n  bottom: -15px;\n  left: 10px;\n  font-size: 1.2rem;\n`","export const phoneNumber = value => {\n  let errorTxt = undefined\n\n  if (value.charAt(0) !== '0') errorTxt = 'Invalid phone number, must start with 0'\n\n  if (value.length < 5) errorTxt = 'Invalid phone number, must be at least 5 characters'\n\n  if (value.length > 10) errorTxt = 'Invalid phone number, must be max 10 characters'\n\n  if (isNaN(Number(value))) errorTxt = 'Invalid phone number, must be a number'\n\n  return errorTxt\n}\n\nexport const required = value => value ? undefined : 'Required'\n\nexport const email = value =>\n  value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)\n    ? 'Invalid email address'\n    : undefined\n\nexport const ssnFormat = value => {\n  const regexFormat = /^(19|20)?([0-9]){2}(0[1-9]|1[012])(0[1-9]|[12][0-9]|3[01])[-+](\\d{4})$/\n\n  return value.match(regexFormat) ? undefined : 'Invalid SSN format'\n}\n\nexport const ssnChecksum = value => {\n  const reduceTo10 = value.length === 8\n    ? value.slice(2, value.length)\n    : value\n  const indexOfDash = reduceTo10.indexOf('-')\n  const numbersArr = reduceTo10.split('')\n  numbersArr.splice(indexOfDash, 1)\n  numbersArr.pop()\n\n  let numberTime1 = []\n  let numberTime2 = []\n\n  for (let i = 0; i < numbersArr.length; i++) {\n    if (i % 2 === 0) {\n      const result = Number(numbersArr[i]) * 2\n      const resultArr = `${result}`.split('')\n\n      if (resultArr.length === 2) {\n        numberTime2.push(Number(resultArr[0]) + Number(resultArr[1]))\n      } else {\n        numberTime2.push(result)\n      }\n    } else {\n      numberTime1.push(Number(numbersArr[i]))\n    }\n  }\n\n  const sumTime1 = numberTime1.reduce((acc, curr) => acc += curr, 0)\n  const sumTime2 = numberTime2.reduce((acc, curr) => acc += curr, 0)\n  const lastDigitOfSum = `${sumTime1 + sumTime2}`.split('').pop()\n  const checksum = `${10 - lastDigitOfSum}`.split('').pop()\n\n  return value.split('').pop() === checksum ? undefined : 'Invalid SSN checksum'\n}","import styled from '@emotion/styled'\nimport { css } from '@emotion/core'\n\nexport const Input = styled.input`\n  min-height: 38px;\n  width: 100%;\n  padding: 2px 8px;\n  outline: 0;\n  background-color: ${({ theme }) => theme.colors.background.primary};\n  border: ${({ theme }) => theme.commons.borders.input};\n  border-radius: ${({ theme }) => theme.commons.borderRadius.main};\n  color: ${({ theme }) => theme.colors.text.primary};\n\n  &::placeholder {\n    color: ${({ theme }) => theme.colors.text.placeholder};\n  }\n\n  ${({ error, theme }) => error && css`\n    border: ${theme.commons.borders.error};\n  `}\n\n  ${({ success, theme }) => success && css`\n    border: ${theme.commons.borders.success};\n  `}\n`","import styled from '@emotion/styled'\nimport { css } from '@emotion/core'\n\nexport const LabelRoot = styled.label`\n  font-weight: 600;\n\n  ${({ smaller }) => smaller && css`\n    font-size: 1.2rem;\n    font-style: italic;\n    display: block;\n  `}\n`\n\nexport const Asterisk = styled.span`\n  color: ${({ theme }) => theme.colors.text.error};\n`","import React from 'react'\n\nimport { LabelRoot, Asterisk } from './Label.shards'\n\nexport const Label = ({ label, smaller = false }) => (\n  <LabelRoot smaller={smaller}>\n    <Asterisk>* </Asterisk>\n    {label}\n  </LabelRoot>\n)","import React from 'react'\n\nimport { Input } from './TextField.shards'\n\nimport { InputRoot, InputWrapper, ErrorMsg } from '../Form/Form.shards'\n\nimport { Label } from '../Label/Label'\n\nexport const TextField = ({\n  input,\n  label,\n  placeholder,\n  type,\n  meta: { touched, error, invalid, valid }\n}) => {\n  const showError = (input.value && invalid) || (touched && invalid)\n\n  return (\n    <InputRoot>\n      <Label\n        label={label}\n      />\n      <InputWrapper>\n        <Input\n          {...input}\n          type={type}\n          placeholder={placeholder}\n          error={showError}\n          success={valid}\n        />\n        {showError && <ErrorMsg>{error}</ErrorMsg>}\n      </InputWrapper>\n    </InputRoot>\n  )\n}","import { text } from '../../styles/theme/colors'\n\nexport const customStyles = {\n  control: (provided, state) => {\n    const { theme, selectProps } = state\n    const customBorderColor = selectProps.error\n      ? theme.colors.error\n      : theme.colors.success\n\n    const keepColor = (selectProps.error || selectProps.success)\n      ? customBorderColor\n      : theme.colors.input\n\n    return ({\n      ...provided,\n      boxShadow: 'none',\n      borderColor: (state.isFocused || state.isSelected) ? keepColor : keepColor,\n      cursor: 'pointer',\n      '&:hover': {\n        borderColor: keepColor\n      },\n    })\n  },\n  placeholder: (provided) => ({\n    ...provided,\n    color: text.placeholder\n  }),\n  option: (provided) => ({\n    ...provided,\n    color: text.primary\n  })\n}","import React from 'react'\nimport Select from 'react-select'\n\nimport { customStyles } from './SelectField.shards'\n\nimport { InputRoot, InputWrapper, ErrorMsg } from '../Form/Form.shards'\n\nimport { Label } from '../Label/Label'\n\nimport { border } from '../../styles/theme/colors'\n\nexport const SelectField = ({\n  input,\n  label,\n  options,\n  placeholder,\n  meta: { touched, error, invalid, valid }\n}) => {\n  const showError = (input.value && invalid) || (touched && invalid)\n\n  return (\n    <InputRoot>\n      <Label\n        label={label}\n      />\n      <InputWrapper>\n        <Select\n          {...input}\n          options={options}\n          placeholder={placeholder}\n          value={input.value}\n          onBlur={() => input.onBlur(input.value)}\n          styles={customStyles}\n          error={showError}\n          success={valid}\n          theme={theme => ({\n            ...theme,\n            colors: {\n              ...theme.colors,\n              ...border\n            },\n          })}\n        />\n        {showError && <ErrorMsg>{error}</ErrorMsg>}\n      </InputWrapper>\n    </InputRoot>\n  )\n}","import React from 'react'\nimport { reduxForm, Field } from 'redux-form'\n\nimport { FormRoot, Button } from './Form.shards'\nimport {\n  required,\n  ssnFormat,\n  ssnChecksum,\n  phoneNumber,\n  email\n} from './validation'\n\nimport { TextField } from '../TextField/TextField'\nimport { SelectField } from '../SelectField/SelectField'\nimport { Label } from '../Label/Label'\n\nconst Form = props => {\n  const { countries, invalid, submitting, handleSubmit } = props\n\n  return <FormRoot onSubmit={handleSubmit}>\n    <h3>Contact form</h3>\n    <Field\n      name='ssn'\n      component={TextField}\n      type='text'\n      label='Social security number'\n      placeholder='Type in your social security number'\n      validate={[required, ssnFormat, ssnChecksum]}\n    />\n    <Field\n      name='phone'\n      component={TextField}\n      type='phone'\n      label='Phone number'\n      placeholder='Type in your number'\n      validate={[required, phoneNumber]}\n    />\n    <Field\n      name='email'\n      component={TextField}\n      type='email'\n      label='Email address'\n      placeholder='Type in your email'\n      validate={[required, email]}\n    />\n    <Field\n      name='countries'\n      component={SelectField}\n      label='Country'\n      placeholder='Select your country'\n      options={countries}\n      validate={required}\n    />\n    <Label\n      label='All fields are mandatory'\n      smaller\n    />\n    <Button\n      type='submit'\n      disabled={invalid || submitting}\n    >\n      Submit\n    </Button>\n  </FormRoot>\n}\n\nconst ContactForm = reduxForm({\n  form: 'contact',\n  enableReinitialize: true\n})(Form)\n\nexport default ContactForm","export const saveFormToLS = values => {\n  const formData = { ...values }\n  localStorage.setItem('contactFormData', JSON.stringify(formData));\n}\n\nexport const getDataFromLS = storageName => {\n  const retrivedData = localStorage.getItem(storageName)\n  // const retrivedData = localStorage.getItem('contactFormData')\n\n  if (retrivedData === null) {\n    return undefined\n  }\n\n  return JSON.parse(retrivedData)\n}\n\nexport const removeFormFromLS = () => localStorage\n  .removeItem('contactFormData')\n\nexport const saveCountriesToLS = data => localStorage\n  .setItem('countriesData', JSON.stringify(data))\n","import { GET_COUNTRIES, GET_FORM_DATA, DELETE_FORM_DATA } from '../consts'\n\nimport {\n  getDataFromLS,\n  removeFormFromLS,\n  saveCountriesToLS\n} from '../../utils/localStorage'\n\nconst allCountries = 'https://restcountries.eu/rest/v2/all'\n\nexport const getCountries = () => {\n  return function (dispatch) {\n    const countriesDataFromLS = getDataFromLS('countriesData')\n\n    if (countriesDataFromLS) {\n      return dispatch({ type: GET_COUNTRIES, payload: countriesDataFromLS })\n    } else {\n      return fetch(allCountries)\n        .then(response => response.json())\n        .then(json => {\n          const countriesOption = json.reduce((acc, curr) => {\n            acc.push({\n              label: curr.name,\n              value: curr.name\n            })\n            return acc\n          }, [])\n          saveCountriesToLS(countriesOption)\n          dispatch({ type: GET_COUNTRIES, payload: countriesOption })\n        })\n    }\n  }\n}\n\nexport const getFormData = () => {\n  return {\n    type: GET_FORM_DATA,\n    payload: getDataFromLS('contactFormData')\n  }\n}\n\nexport const deleteFormData = () => {\n  return {\n    type: DELETE_FORM_DATA,\n    payload: removeFormFromLS()\n  }\n}","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport Form from './Form'\nimport { saveFormToLS } from '../../utils/localStorage'\n\nimport {\n  getCountries,\n  getFormData,\n  deleteFormData\n} from '../../store/actions/index'\n\nconst FormContainer = props => {\n  const {\n    getCountries,\n    countries,\n    getFormData,\n    deleteFormData,\n    initialValues,\n  } = props\n\n  useEffect(() => {\n    getCountries()\n    getFormData()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const printSuccess = () => {\n    console.log('Success')\n    deleteFormData()\n  }\n\n  return <Form\n    onSubmit={printSuccess}\n    onChange={saveFormToLS}\n    countries={countries}\n    initialValues={initialValues}\n  />\n}\n\nconst ConnectedForm = connect(\n  state => ({\n    countries: state.countriesField.countries,\n    initialValues: state.formData\n  }),\n  dispatch => ({\n    getCountries: () => dispatch(getCountries()),\n    getFormData: () => dispatch(getFormData()),\n    deleteFormData: () => dispatch(deleteFormData())\n  })\n)(FormContainer)\n\nexport default ConnectedForm","import React from 'react'\nimport { Global } from '@emotion/core'\nimport { ThemeProvider } from 'emotion-theming'\nimport { Provider } from 'react-redux'\n\nimport store from '../../store/index'\nimport globalStyles from '../../styles/global'\nimport theme from '../../styles/theme/theme'\n\nimport { Root } from './App.shards'\n\nimport FormContainer from '../Form/FormContainer'\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Global styles={globalStyles} />\n      <ThemeProvider theme={theme}>\n        <Root>\n          <FormContainer />\n        </Root>\n      </ThemeProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './components/App/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}